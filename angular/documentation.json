{
    "pipes": [],
    "interfaces": [
        {
            "name": "AddUserResponse",
            "id": "interface-AddUserResponse-3dbd550b30171a906a2ee9b2c00a3151b34ea36dfac8e4fae6a6e4cbc199fc7482cc44dd61e5806bac593024080d8b24ff0b52d18d5e5dd290820eec1fc1c24e",
            "file": "src/users/domain/graphql/mutations/add-user-mutation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Mutation, gql } from \"apollo-angular\";\r\nimport { CreateUser, User } from \"../../../shared\";\r\n\r\nexport interface AddUserResponse {\r\n    addUser : User\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddUserMutation extends Mutation <\r\n    AddUserResponse,\r\n    {\r\n        input: CreateUser\r\n    }>{\r\n    public override document = gql`\r\n        mutation addUser($input: CreateUserInput!){\r\n            addUser(createUser: $input) {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`\r\n}",
            "properties": [
                {
                    "name": "addUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BasicButton",
            "id": "interface-BasicButton-b87de1927e58b60da67f305139d3b73649fbd462ec8805277f4ffcf347d8a086cd8798746ab4508558ecc41bf3757116525604dcec18cb6e3fb457ca82aadaf2",
            "file": "src/buttons/shared/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonDefinition {\r\n    buttonType: 'normal'|'submit'|'warning';\r\n    type: 'basic'|'submit'|'reset';\r\n    kind: 'basic'|'raised'|'fab';\r\n}\r\n\r\nexport interface BasicButton {\r\n    buttonDefinition: ButtonDefinition;\r\n    label?:string;\r\n    icon?:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "buttonDefinition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonDefinition",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ButtonDefinition",
            "id": "interface-ButtonDefinition-b87de1927e58b60da67f305139d3b73649fbd462ec8805277f4ffcf347d8a086cd8798746ab4508558ecc41bf3757116525604dcec18cb6e3fb457ca82aadaf2",
            "file": "src/buttons/shared/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonDefinition {\r\n    buttonType: 'normal'|'submit'|'warning';\r\n    type: 'basic'|'submit'|'reset';\r\n    kind: 'basic'|'raised'|'fab';\r\n}\r\n\r\nexport interface BasicButton {\r\n    buttonDefinition: ButtonDefinition;\r\n    label?:string;\r\n    icon?:string;\r\n}\r\n",
            "properties": [
                {
                    "name": "buttonType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"normal\" | \"submit\" | \"warning\"",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "kind",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"basic\" | \"raised\" | \"fab\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"basic\" | \"submit\" | \"reset\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CreateUser",
            "id": "interface-CreateUser-782d6a5b04e6d4f136d86ed74875d4aafa49354c6d172b58982340de3bdfa279c5a518737360c45c902919ea4325a0b4ba5d1e18a6d6c78567cbea1093b3742f",
            "file": "src/users/shared/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}\r\n\r\nexport interface CreateUser {\r\n    displayName?: string;\r\n    email?: string;\r\n}\r\n\r\nexport interface UpdateUser {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateUser",
            "id": "interface-UpdateUser-782d6a5b04e6d4f136d86ed74875d4aafa49354c6d172b58982340de3bdfa279c5a518737360c45c902919ea4325a0b4ba5d1e18a6d6c78567cbea1093b3742f",
            "file": "src/users/shared/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}\r\n\r\nexport interface CreateUser {\r\n    displayName?: string;\r\n    email?: string;\r\n}\r\n\r\nexport interface UpdateUser {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}",
            "properties": [
                {
                    "name": "correlationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-782d6a5b04e6d4f136d86ed74875d4aafa49354c6d172b58982340de3bdfa279c5a518737360c45c902919ea4325a0b4ba5d1e18a6d6c78567cbea1093b3742f",
            "file": "src/users/shared/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}\r\n\r\nexport interface CreateUser {\r\n    displayName?: string;\r\n    email?: string;\r\n}\r\n\r\nexport interface UpdateUser {\r\n    correlationId: string;\r\n    displayName: string;\r\n    email: string;\r\n}",
            "properties": [
                {
                    "name": "correlationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Users",
            "id": "interface-Users-d3c0c12370bbce3439d13d60438a5f4c3c1e4a97b24b3ba893d1b024399b910e51834594841b5f8b074baf77df0cc8e4c52e30118c4c317a6854e6914aade008",
            "file": "src/users/domain/graphql/queries/users-query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Query, gql } from \"apollo-angular\";\r\nimport { User } from \"../../../shared\";\r\n\r\nexport interface Users{\r\n    users: User[]\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersQuery extends Query<Users> {\r\n    public override document = gql`\r\n        query {\r\n            users {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`\r\n}",
            "properties": [
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UsersPartialState",
            "id": "interface-UsersPartialState-e3e33124594bbcfed5710eab8d5c7097e3fe1197db9c836e7712598c67f4a333fac8a6a48a919e4ee65393b7fdcdd3762baec5cb11a7e18bbfbab23f80d9b6dd",
            "file": "src/users/domain/state/users.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { User } from \"../../shared\";\r\nimport { UsersGenericActions } from \"./users.actions\";\r\n\r\nexport const USERS_FEATURE_KEY = 'users';\r\n\r\nexport interface UsersState {\r\n    usersLoaded: boolean;\r\n    usersList: User[];\r\n}\r\n\r\nexport interface UsersPartialState {\r\n    readonly [USERS_FEATURE_KEY]: UsersState;\r\n}\r\n\r\nexport const initialState: UsersState = {\r\n    usersLoaded: false,\r\n    usersList: []\r\n}\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(UsersGenericActions.usersListLoaded, (state, action) =>({\r\n        ...state,\r\n        usersLoaded: true,\r\n        usersList: action.usersList\r\n    }))\r\n);\r\n\r\nexport function usersReducer(state: UsersState, action: Action){\r\n    return reducer(state, action)\r\n}",
            "properties": [
                {
                    "name": "USERS_FEATURE_KEY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsersState",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UsersState",
            "id": "interface-UsersState-e3e33124594bbcfed5710eab8d5c7097e3fe1197db9c836e7712598c67f4a333fac8a6a48a919e4ee65393b7fdcdd3762baec5cb11a7e18bbfbab23f80d9b6dd",
            "file": "src/users/domain/state/users.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { User } from \"../../shared\";\r\nimport { UsersGenericActions } from \"./users.actions\";\r\n\r\nexport const USERS_FEATURE_KEY = 'users';\r\n\r\nexport interface UsersState {\r\n    usersLoaded: boolean;\r\n    usersList: User[];\r\n}\r\n\r\nexport interface UsersPartialState {\r\n    readonly [USERS_FEATURE_KEY]: UsersState;\r\n}\r\n\r\nexport const initialState: UsersState = {\r\n    usersLoaded: false,\r\n    usersList: []\r\n}\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(UsersGenericActions.usersListLoaded, (state, action) =>({\r\n        ...state,\r\n        usersLoaded: true,\r\n        usersList: action.usersList\r\n    }))\r\n);\r\n\r\nexport function usersReducer(state: UsersState, action: Action){\r\n    return reducer(state, action)\r\n}",
            "properties": [
                {
                    "name": "usersList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "usersLoaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AddUserMutation",
            "id": "injectable-AddUserMutation-3dbd550b30171a906a2ee9b2c00a3151b34ea36dfac8e4fae6a6e4cbc199fc7482cc44dd61e5806bac593024080d8b24ff0b52d18d5e5dd290820eec1fc1c24e",
            "file": "src/users/domain/graphql/mutations/add-user-mutation.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "gql`\r\n        mutation addUser($input: CreateUserInput!){\r\n            addUser(createUser: $input) {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        164
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Mutation, gql } from \"apollo-angular\";\r\nimport { CreateUser, User } from \"../../../shared\";\r\n\r\nexport interface AddUserResponse {\r\n    addUser : User\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddUserMutation extends Mutation <\r\n    AddUserResponse,\r\n    {\r\n        input: CreateUser\r\n    }>{\r\n    public override document = gql`\r\n        mutation addUser($input: CreateUserInput!){\r\n            addUser(createUser: $input) {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`\r\n}",
            "extends": [
                "Mutation"
            ],
            "type": "injectable"
        },
        {
            "name": "UsersEffects",
            "id": "injectable-UsersEffects-bcd3ce395cb24d2f52065ef76ea56bf6f3bc216f90fe3b40a9c15f2af8a615e94e5fadf4206ecf6d7062a54b1fc9b6c955fb03f37f7b93f90164f7b634bea373",
            "file": "src/users/domain/state/users.effects.ts",
            "properties": [
                {
                    "name": "initUsers$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(UsersGenericActions.init),\r\n            fetch({\r\n                run: () => this.usersQuery\r\n                                .watch()\r\n                                .valueChanges.pipe(\r\n                                    map(result => UsersGenericActions.usersListLoaded({\r\n                                        usersList: result.data.users\r\n                                    }))\r\n                                ),\r\n                onError: (_, error) => console.log(error)\r\n            })\r\n        ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "saveUser$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(UserCreationAction.saveButtonClicked),\r\n            pessimisticUpdate({\r\n                run: (action) =>\r\n                    this.addUserMutation.mutate({input: action.createUser}).pipe(\r\n                        map(({data}) => UserCreationAction.userCreationSucceeded({\r\n                            user: data?.addUser as User\r\n                        }))\r\n                    ),\r\n                onError: (action, error) => {\r\n                    console.log(error)\r\n                }\r\n            })\r\n        ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { UsersQuery } from \"../graphql/queries/users-query\";\r\nimport { UserCreationAction, UsersGenericActions } from \"./users.actions\";\r\nimport { map } from \"rxjs\";\r\nimport { fetch, pessimisticUpdate } from '@nx/angular'\r\nimport { AddUserMutation } from \"../graphql/mutations/add-user-mutation\";\r\nimport { User } from \"../../shared\";\r\n\r\n@Injectable()\r\nexport class UsersEffects {\r\n    public initUsers$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(UsersGenericActions.init),\r\n            fetch({\r\n                run: () => this.usersQuery\r\n                                .watch()\r\n                                .valueChanges.pipe(\r\n                                    map(result => UsersGenericActions.usersListLoaded({\r\n                                        usersList: result.data.users\r\n                                    }))\r\n                                ),\r\n                onError: (_, error) => console.log(error)\r\n            })\r\n        ));\r\n\r\n    public saveUser$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(UserCreationAction.saveButtonClicked),\r\n            pessimisticUpdate({\r\n                run: (action) =>\r\n                    this.addUserMutation.mutate({input: action.createUser}).pipe(\r\n                        map(({data}) => UserCreationAction.userCreationSucceeded({\r\n                            user: data?.addUser as User\r\n                        }))\r\n                    ),\r\n                onError: (action, error) => {\r\n                    console.log(error)\r\n                }\r\n            })\r\n        ))\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private usersQuery: UsersQuery,\r\n        private addUserMutation: AddUserMutation){}\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "usersQuery",
                        "type": "UsersQuery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "addUserMutation",
                        "type": "AddUserMutation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "usersQuery",
                        "type": "UsersQuery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "addUserMutation",
                        "type": "AddUserMutation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UsersQuery",
            "id": "injectable-UsersQuery-d3c0c12370bbce3439d13d60438a5f4c3c1e4a97b24b3ba893d1b024399b910e51834594841b5f8b074baf77df0cc8e4c52e30118c4c317a6854e6914aade008",
            "file": "src/users/domain/graphql/queries/users-query.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "gql`\r\n        query {\r\n            users {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125,
                        164
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Query, gql } from \"apollo-angular\";\r\nimport { User } from \"../../../shared\";\r\n\r\nexport interface Users{\r\n    users: User[]\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersQuery extends Query<Users> {\r\n    public override document = gql`\r\n        query {\r\n            users {\r\n                correlationId\r\n                displayName\r\n                email\r\n            }\r\n        }`\r\n}",
            "extends": [
                "Query"
            ],
            "type": "injectable"
        },
        {
            "name": "UsersService",
            "id": "injectable-UsersService-6a76682408737c21ec0a25409955dcc1ffd76831b9e1009f7767c2abd131369a92ef79b99c9902b441ae0f28c8a72dc5058197ea913f6a7073756d1405d3fa91",
            "file": "src/users/domain/services/users.service.ts",
            "properties": [
                {
                    "name": "usersList$",
                    "defaultValue": "this.store.select(UsersSelectors.selectUsersList)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "usersLoaded$",
                    "defaultValue": "this.store.select(UsersSelectors.selectUsersLoaded)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { UsersState } from \"../state/users.reducer\";\r\nimport { Store, Action } from \"@ngrx/store\";\r\nimport * as UsersSelectors from \"../state/users.selectors\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n    constructor(private store: Store<UsersState>){}\r\n\r\n    public usersLoaded$ = this.store.select(UsersSelectors.selectUsersLoaded);\r\n    public usersList$ = this.store.select(UsersSelectors.selectUsersList);\r\n\r\n    public dispatch(action: Action){\r\n        this.store.dispatch(action)\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<UsersState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<UsersState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a9db3c9b40d55e74690c43f4248feb9681540c4a38e3703470768e080b4fdb592d40154758220e57da8f441866145e41357359c8736056bcca5826aaf5243945",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Mi amor'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ig-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'Mi amor';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ig-toolbar></ig-toolbar>\r\n<ig-navbar>\r\n    <router-outlet />\r\n</ig-navbar>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-0cfbea8fe6497362b3e0de5870f32d4c822bcbaf19b69cdfed41236a84d8f890e170bcf6b8b5b9c537588ca8fdc9d96b3c5a9991305aea821507c70515c3cb15",
            "file": "src/buttons/feature/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "BasicButton",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { BasicButton } from \"../../shared/models\";\r\n\r\n@Component({\r\n    selector: 'ig-button',\r\n    templateUrl: './button.component.html',\r\n    styleUrl: './button.component.scss'\r\n})\r\nexport class ButtonComponent {\r\n    @Input() button: BasicButton;\r\n}",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (button) {\r\n@switch (button.buttonDefinition.kind) {\r\n@case ('raised') {\r\n<button mat-raised-button>\r\n    @if (button.icon) {\r\n    <mat-icon>{{button.icon}}</mat-icon>\r\n    }\r\n    @if (button.label) {\r\n    <span>{{button.label}}</span>\r\n    }\r\n</button>\r\n}\r\n@case ('fab') {\r\n<button mat-fab>\r\n    @if (button.icon) {\r\n    <mat-icon>{{button.icon}}</mat-icon>\r\n    }\r\n    @if (button.label) {\r\n    <span>{{button.label}}</span>\r\n    }\r\n</button>\r\n}\r\n@default {\r\n<button mat-button>\r\n    @if (button.icon) {\r\n    <mat-icon>{{button.icon}}</mat-icon>\r\n    }\r\n    @if (button.label) {\r\n    <span>{{button.label}}</span>\r\n    }\r\n</button>\r\n}\r\n}\r\n}"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-c3792c71f66a87d569cf07e58a215fa07eadb411de04bd073b5cb81c9cd6af4cbcd88d5e6b85001b78b2e08b0350cdb6a2020bfeb1e9d738d3b4b1e7b8ebc53d",
            "file": "src/shell/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "opened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'ig-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrl: './navbar.component.scss'\r\n})\r\nexport class NavbarComponent {\r\n    @Input()\r\n    public opened = true;\r\n}",
            "styleUrl": "./navbar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" [opened]=\"opened\">\r\n        Sarasa\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <ng-content></ng-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-5453a8ba9cb65045edbb9ca626efe57bd7e6482e4ab2cd33bef82e945cb263ec35d989fdd978f5e3c0ff26b5550e00d11f874c149ca9b95c292259c9ceb7b92b",
            "file": "src/shell/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-toolbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'ig-toolbar',\r\n    templateUrl: './toolbar.component.html',\r\n    styleUrl: './toolbar.component.scss'\r\n})\r\nexport class ToolbarComponent {\r\n\r\n}",
            "styleUrl": "./toolbar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-toolbar>\r\n    <button mat-icon-button>\r\n        <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>My App</span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button>\r\n        <mat-icon>account_circle</mat-icon>\r\n    </button>\r\n</mat-toolbar>"
        },
        {
            "name": "UserCreationFormComponent",
            "id": "component-UserCreationFormComponent-c52d197a7a7be4fb3f650a3d9697fe232dd0872e24f400cb77dff22919549d04e32c6d178582132f009682971ff543bb979882d8193255d31c017840a31ce8a4",
            "file": "src/users/feature/user-creation-form/user-creation-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-user-creation-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-creation-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<UserCreationFormComponent>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "displayNameControl",
                    "defaultValue": "new FormControl('', {validators: [Validators.required]})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "emailControl",
                    "defaultValue": "new FormControl('', {\r\n        validators: [\r\n            Validators.required,\r\n            Validators.email]})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.formBuilder.group({\r\n        displayName: this.displayNameControl,\r\n        email: this.emailControl\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getDisplayNameErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "\"\" | \"You must enter a value\"",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getEmailErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "\"\" | \"You must enter a value\" | \"Not a valid email\"",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "saveUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { UsersService } from \"../../domain/services/users.service\";\r\nimport { CreateUser, User } from \"../../shared\";\r\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserCreationAction, UsersGenericActions } from \"../../domain/state/users.actions\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n    selector: 'ig-user-creation-form',\r\n    templateUrl: './user-creation-form.component.html',\r\n    styleUrl: './user-creation-form.component.scss',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserCreationFormComponent {\r\n    public displayNameControl = new FormControl('', {validators: [Validators.required]});\r\n    public emailControl = new FormControl('', {\r\n        validators: [\r\n            Validators.required,\r\n            Validators.email]});\r\n\r\n    constructor(\r\n        private readonly userService: UsersService,\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<UserCreationFormComponent>) {}\r\n\r\n    public form = this.formBuilder.group({\r\n        displayName: this.displayNameControl,\r\n        email: this.emailControl\r\n    });\r\n\r\n    public getDisplayNameErrorMessage() {\r\n        return this.displayNameControl.hasError('required') ? \"You must enter a value\" : ''\r\n    }\r\n    public getEmailErrorMessage(){\r\n        if (this.emailControl.hasError('required')) {\r\n            return 'You must enter a value';\r\n          }\r\n      \r\n          return this.emailControl.hasError('email') ? 'Not a valid email' : '';\r\n    }\r\n\r\n    public saveUser(){\r\n        if (this.form.valid) {\r\n            const formValue = this.form.value;\r\n            this.userService.dispatch(UserCreationAction.saveButtonClicked({\r\n                createUser: {\r\n                    displayName: formValue.displayName as string,\r\n                    email: formValue.email as string,\r\n                }\r\n            }))\r\n            this.dialogRef.close();\r\n        }\r\n    }\r\n}",
            "styleUrl": "./user-creation-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<UserCreationFormComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<UserCreationFormComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-card class=\"formCard\">\r\n    <mat-card-header>\r\n        <h1>\r\n            Create User\r\n        </h1>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" class=\"form\">\r\n            <mat-form-field class=\"formField\">\r\n                <mat-label>Display Name</mat-label>\r\n                <input matInput [formControl]=\"displayNameControl\">\r\n                @if (displayNameControl.invalid){\r\n                <mat-error>{{getDisplayNameErrorMessage()}}</mat-error>\r\n                }\r\n            </mat-form-field>\r\n            <mat-form-field class=\"formField\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput [formControl]=\"emailControl\">\r\n                @if (emailControl.invalid){\r\n                <mat-error>{{getEmailErrorMessage()}}</mat-error>\r\n                }\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n        <button mat-raised-button (click)=\"saveUser()\">Guardar</button>\r\n    </mat-card-footer>\r\n</mat-card>"
        },
        {
            "name": "UserListComponent",
            "id": "component-UserListComponent-4e779f86f8d1cd1c42a829a2a33093d5735e557496048a00d0594789c346c5e7213f6619460d7ec1f426c0d5fd3bb14a2d0d677110625e2b507822d7f08ac669",
            "file": "src/users/feature/user-list/user-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-users-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<User>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "headers",
                    "defaultValue": "['displayName', 'email']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "listToolbarButtons",
                    "defaultValue": "[\r\n        {\r\n            buttonDefinition: {\r\n                buttonType: 'normal',\r\n                kind: 'raised',\r\n                type: 'basic'\r\n            },\r\n            label: 'New'\r\n        }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicButton[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loaded$",
                    "defaultValue": "this.usersService.usersLoaded$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userCreationDialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "openUserCreationDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { User } from \"../../shared\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { UsersService } from \"../../domain/services/users.service\";\r\nimport { filter, map } from \"rxjs\";\r\nimport { BasicButton } from '../../../buttons/shared';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UserCreationFormComponent } from \"../user-creation-form/user-creation-form.component\";\r\n\r\n@Component({\r\n    selector: \"ig-users-list\",\r\n    templateUrl: './user-list.component.html',\r\n    styleUrl: \"./user-list.component.scss\",\r\n})\r\nexport class UserListComponent {\r\n    public dataSource = new MatTableDataSource<User>();\r\n    public headers = ['displayName', 'email'];\r\n    public listToolbarButtons : BasicButton[] = [\r\n        {\r\n            buttonDefinition: {\r\n                buttonType: 'normal',\r\n                kind: 'raised',\r\n                type: 'basic'\r\n            },\r\n            label: 'New'\r\n        }\r\n    ];\r\n    public loaded$ = this.usersService.usersLoaded$;\r\n    constructor(\r\n        private readonly usersService: UsersService,\r\n        public userCreationDialog: MatDialog){\r\n        this.usersService.usersList$.pipe(\r\n            filter(x => !!x),\r\n            map((data) => {\r\n                this.dataSource.data = data;\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    public openUserCreationDialog() {\r\n        this.userCreationDialog.open(UserCreationFormComponent, {\r\n            width: '750px',\r\n            height: 'auto'\r\n        })\r\n    }\r\n}",
            "styleUrl": "./user-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userCreationDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userCreationDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-toolbar>\r\n    <button mat-raised-button (click)=\"openUserCreationDialog()\"> New </button>\r\n</mat-toolbar>\r\n@if (loaded$ | async) {\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n    <ng-container matColumnDef=\"correlationId\">\r\n        <th mat-header-cell *matHeaderCellDef>ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.correlationId}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"displayName\">\r\n        <th mat-header-cell *matHeaderCellDef>Display Name</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.displayName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef>Email</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"headers\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: headers\"></tr>\r\n</table>\r\n}"
        },
        {
            "name": "UsersRoutingComponent",
            "id": "component-UsersRoutingComponent-d9a980389db0ab6d50684344d37a8a316ac6b7bbee25e2a99d8a63db0e0494881b2ceae699ca75638aac1032b43f14feac8c96ced2c829d53230cc2bdf6c6be2",
            "file": "src/users/users-routing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ig-users",
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { UsersGenericActions } from './domain/state/users.actions';\r\n\r\n@Component({\r\n  selector: 'ig-users',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class UsersRoutingComponent {\r\n  constructor(private store: Store){\r\n    this.store.dispatch(UsersGenericActions.init());\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-64f48702c0057239d6572b7db6737a9748ac5bba7f4869ee500929a17d6178da863212b818b55732ee261adc2e0858553274fc5ead286b3e20a0b5a4e1fe2798",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport { ToolbarModule } from '../shell/toolbar/toolbar.module';\r\nimport { NavbarModule } from '../shell/navbar/navbar.module';\r\nimport { APOLLO_OPTIONS, ApolloModule } from 'apollo-angular';\r\nimport { HttpLink } from 'apollo-angular/http';\r\nimport { InMemoryCache } from '@apollo/client/core'\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { uri } from './graphql.module';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\r\n\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        ApolloModule,\r\n        HttpClientModule,\r\n        ToolbarModule,\r\n        NavbarModule,\r\n        RouterOutlet,\r\n        AppRoutingModule,\r\n        StoreModule.forRoot({}, {}),\r\n        StoreRouterConnectingModule.forRoot(),\r\n        EffectsModule.forRoot([]),\r\n        StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() })],\r\n    exports: [],\r\n    providers: [\r\n      provideAnimationsAsync(),\r\n      {\r\n        provide: APOLLO_OPTIONS,\r\n        useFactory(httpLink: HttpLink){\r\n          return {\r\n            cache: new InMemoryCache(),\r\n            link: httpLink.create({\r\n              uri: uri\r\n            })\r\n          }\r\n        },\r\n        deps: [HttpLink]\r\n      }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NavbarModule"
                        },
                        {
                            "name": "RouterOutlet"
                        },
                        {
                            "name": "ToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-2cb03db0fb30f7999ba57138d7367ab5f289d7acfa36416fe92e92a67045316d096a199b75515f251c31131e0d2134de0eebedf44a8ef024638d69c136e2306f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path: 'users',\r\n        loadChildren: () => \"import('../users').then(m => m.UsersModule)\"\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'users',\r\n        pathMatch: 'full'\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule{}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonsModule",
            "id": "module-ButtonsModule-7b898708a6be451db9d157509e9281d2dc0982338b8acfede4e6f05d2a5bc3768c644509e4c3e57b6a6b064e6cad9ecf6b7628f9c6ca2de070da2986e1366460",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/buttons/buttons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { ButtonComponent } from \"./feature/button/button.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule],\r\n    declarations: [ButtonComponent],\r\n    exports: [ButtonComponent]\r\n})\r\nexport class ButtonsModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavbarModule",
            "id": "module-NavbarModule-9cffe8ad6b015ae73ca53640e2950b4de36ac39b56a69b09117ce2b616be9b56862a8d4ed8df12ee3c2dc0e7f80d989b6fde353dba7562506c2e3d4092640910",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/shell/navbar/navbar.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { NavbarComponent } from \"./navbar.component\";\r\n\r\nconst MaterialModule = [MatSidenavModule];\r\n\r\n@NgModule({\r\n    declarations: [NavbarComponent],\r\n    imports: [CommonModule, MaterialModule],\r\n    exports: [NavbarComponent]\r\n})\r\nexport class NavbarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ToolbarModule",
            "id": "module-ToolbarModule-87b995d90be4c42138dfd3f43cc3ebef95ddf7f330768427c68c6cd0eb4eb0d75903b2d2bdddd1247d6ed6702d5f2928f67e055c5ebe019fb346c7eb9af0475d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/shell/toolbar/toolbar.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ToolbarComponent } from \"./toolbar.component\";\r\n\r\nconst MaterialModules = [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n]\r\n\r\n@NgModule({\r\n    declarations: [ToolbarComponent],\r\n    imports: [CommonModule,MaterialModules],\r\n    exports: [ToolbarComponent]\r\n})\r\nexport class ToolbarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UsersModule",
            "id": "module-UsersModule-dbc3ecbc00989e2f3feb01ce592243e647b1bf02ebb2450d4a2f0e258355c756b4e2e3fb375263cb764006106a618dd63b990acf14640216213209aaf43ebea4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/users/users.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { UsersRoutingModule } from \"./users-routing.module\";\r\nimport { UsersRoutingComponent } from \"./users-routing.component\";\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { UserListComponent } from \"./feature/user-list/user-list.component\";\r\nimport { ToolbarModule } from \"../shell/toolbar/toolbar.module\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { USERS_FEATURE_KEY, usersReducer } from \"./domain/state/users.reducer\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { UsersEffects } from \"./domain/state/users.effects\";\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { UserCreationFormComponent } from \"./feature/user-creation-form/user-creation-form.component\";\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nconst MaterialModules = [\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        UsersRoutingComponent,\r\n        UserListComponent,\r\n        UserCreationFormComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ToolbarModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MaterialModules,\r\n        UsersRoutingModule,\r\n        StoreModule.forFeature(\r\n            USERS_FEATURE_KEY,\r\n            usersReducer\r\n        ),\r\n        EffectsModule.forFeature([UsersEffects])],\r\n    exports: []\r\n})\r\nexport class UsersModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserCreationFormComponent"
                        },
                        {
                            "name": "UserListComponent"
                        },
                        {
                            "name": "UsersRoutingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ToolbarModule"
                        },
                        {
                            "name": "UsersRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UsersRoutingModule",
            "id": "module-UsersRoutingModule-7f6bf09c20b63249eab2e56c7b7cc80616ca1350d5f0e895220ecc59fb4baba87c325b1cca82c06c147861f800887f1da57fe32500842145c852f6effeed1d7a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/users/users-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { UsersRoutingComponent } from \"./users-routing.component\";\r\nimport { UserListComponent } from \"./feature/user-list/user-list.component\";\r\nimport { UserCreationFormComponent } from \"./feature/user-creation-form/user-creation-form.component\";\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path: '',\r\n        component: UsersRoutingComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: UserListComponent,\r\n                children: [\r\n                    {\r\n                        path: 'new',\r\n                        component: UserCreationFormComponent\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "getUsersState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<UsersState>(USERS_FEATURE_KEY)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UsersState",
                "defaultValue": "{\r\n    usersLoaded: false,\r\n    usersList: []\r\n}"
            },
            {
                "name": "MaterialModule",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shell/navbar/navbar.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[MatSidenavModule]"
            },
            {
                "name": "MaterialModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/users.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n]"
            },
            {
                "name": "MaterialModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shell/toolbar/toolbar.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n]"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(UsersGenericActions.usersListLoaded, (state, action) =>({\r\n        ...state,\r\n        usersLoaded: true,\r\n        usersList: action.usersList\r\n    }))\r\n)"
            },
            {
                "name": "selectUsersList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getUsersState,\r\n    state => state.usersList\r\n)"
            },
            {
                "name": "selectUsersLoaded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getUsersState,\r\n    (state) => state.usersLoaded\r\n)"
            },
            {
                "name": "uri",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/graphql.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'http://localhost:5038/graphql/'"
            },
            {
                "name": "UserCreationAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n    source: \"User Creation form\",\r\n    events: {\r\n        \"Save button clicked\": props<{createUser: CreateUser}>(),\r\n        \"User creation succeeded\": props<{user: User}>(),\r\n    }\r\n})"
            },
            {
                "name": "USERS_FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'users'"
            },
            {
                "name": "UsersGenericActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/users/domain/state/users.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n    source: \"Users\",\r\n    events: {\r\n        \"Init\": emptyProps(),\r\n        \"Users List Loaded\": props<{usersList: User[]}>(),\r\n        \"New User button clicked\": emptyProps()\r\n    }\r\n})"
            }
        ],
        "functions": [
            {
                "name": "usersReducer",
                "file": "src/users/domain/state/users.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "UsersState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "UsersState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/users/domain/state/users.selectors.ts": [
                {
                    "name": "getUsersState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<UsersState>(USERS_FEATURE_KEY)"
                },
                {
                    "name": "selectUsersList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getUsersState,\r\n    state => state.usersList\r\n)"
                },
                {
                    "name": "selectUsersLoaded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getUsersState,\r\n    (state) => state.usersLoaded\r\n)"
                }
            ],
            "src/users/domain/state/users.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsersState",
                    "defaultValue": "{\r\n    usersLoaded: false,\r\n    usersList: []\r\n}"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(UsersGenericActions.usersListLoaded, (state, action) =>({\r\n        ...state,\r\n        usersLoaded: true,\r\n        usersList: action.usersList\r\n    }))\r\n)"
                },
                {
                    "name": "USERS_FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'users'"
                }
            ],
            "src/shell/navbar/navbar.module.ts": [
                {
                    "name": "MaterialModule",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shell/navbar/navbar.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[MatSidenavModule]"
                }
            ],
            "src/users/users.module.ts": [
                {
                    "name": "MaterialModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/users.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n]"
                }
            ],
            "src/shell/toolbar/toolbar.module.ts": [
                {
                    "name": "MaterialModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shell/toolbar/toolbar.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n]"
                }
            ],
            "src/app/graphql.module.ts": [
                {
                    "name": "uri",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/graphql.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'http://localhost:5038/graphql/'"
                }
            ],
            "src/users/domain/state/users.actions.ts": [
                {
                    "name": "UserCreationAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n    source: \"User Creation form\",\r\n    events: {\r\n        \"Save button clicked\": props<{createUser: CreateUser}>(),\r\n        \"User creation succeeded\": props<{user: User}>(),\r\n    }\r\n})"
                },
                {
                    "name": "UsersGenericActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/users/domain/state/users.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n    source: \"Users\",\r\n    events: {\r\n        \"Init\": emptyProps(),\r\n        \"Users List Loaded\": props<{usersList: User[]}>(),\r\n        \"New User button clicked\": emptyProps()\r\n    }\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/users/domain/state/users.reducer.ts": [
                {
                    "name": "usersReducer",
                    "file": "src/users/domain/state/users.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "UsersState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UsersState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "users",
                        "loadChildren": "../users#UsersModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/users/users-routing.module.ts",
                                        "module": "UsersRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "UsersRoutingComponent",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "UserListComponent",
                                                        "children": [
                                                            {
                                                                "path": "new",
                                                                "component": "UserCreationFormComponent"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "UsersModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "users",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "uri",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/buttons/feature/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/buttons/shared/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BasicButton",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/buttons/shared/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonDefinition",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/shell/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/shell/navbar/navbar.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MaterialModule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/shell/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/shell/toolbar/toolbar.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MaterialModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/graphql/mutations/add-user-mutation.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AddUserMutation",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/graphql/mutations/add-user-mutation.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddUserResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/graphql/queries/users-query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersQuery",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/graphql/queries/users-query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Users",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/services/users.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserCreationAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UsersGenericActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UsersPartialState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UsersState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "usersReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USERS_FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUsersState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUsersList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/domain/state/users.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUsersLoaded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/users/feature/user-creation-form/user-creation-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserCreationFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/users/feature/user-list/user-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/users/shared/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/users/shared/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateUser",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/users/shared/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/users/users-routing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsersRoutingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/users/users.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MaterialModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}